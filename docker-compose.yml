# Docker Compose file for the openrouteservice (ORS) application
# Edited for Coolify deployment using a host-mounted PBF file (Philippines)

services:
  # ----------------- ORS application configuration ------------------- #
  ors-app:
    # Activate the following lines to build the container from the repository
    build:
      context: ./
    container_name: ors-app
    ports:
      - "8080:8082" # Expose the ORS API on port 8080
      - "9001:9001" # Expose additional port for monitoring (optional)
    image: local/openrouteservice:latest
    
    # --- VOLUMES: Custom Bind Mounts for PBF, Graphs, and Cache ---
    volumes:
      # 1. BIND MOUNT FOR PBF FILE (Host file to Container target path)
      # This points to the file you manually placed on the server via SSH.
      - /data/ors/pbf/philippines.osm.pbf:/home/ors/files/osm_file.pbf 

      # 2. SEPARATE NAMED VOLUMES (Recommended for graph/cache persistence)
      # Uncomment the named volumes section at the bottom and use these, 
      # or change these to bind mounts if you prefer local folders (e.g., - ./graphs:/home/ors/graphs)
      - ors_graphs:/home/ors/graphs
      - ors_elevation:/home/ors/elevation_cache
      - ors_config:/home/ors/config
      - ors_logs:/home/ors/logs
      
    environment:
      # Set to True the first time to build the Philippines graph. 
      # Set to False after a successful build to skip the check on subsequent restarts.
      REBUILD_GRAPHS: True 
      CONTAINER_LOG_LEVEL: INFO

      # ------------------ JAVA OPTS ------------------ #
      # Set XMX to AT LEAST 2x the PBF size (556MB * 2 = ~1.1GB). 2g is safe.
      XMS: 512m # Set lower start memory to save resources during non-peak times
      XMX: 2g   # Max RAM assigned to java for the graph build. 
      ADDITIONAL_JAVA_OPTS: ""

      # ----------------- Properties configuration ------------------- #
      # Configure ORS to use the new PBF file we mounted above.
      # This overrides the default (example-heidelberg.test.pbf)
      ors.engine.profile_default.build.source_file: /home/ors/files/osm_file.pbf
      ors.engine.profile_default.graph_path: /home/ors/graphs
      ors.engine.elevation.cache_path: /home/ors/elevation_cache
      ors.engine.profiles.car.enabled: true
      # You can enable other profiles like foot-walking, cycling-regular, etc. here:
      # ors.engine.profiles.foot-walking.enabled: true 
      # ors.engine.profiles.cycling-regular.enabled: true 
      logging.level.org.heigit: INFO

# ----------------- Docker Volumes configuration ------------------- #
# Define the Docker managed volumes for ORS data persistence. 
# These will store your built graphs so they don't have to rebuild on every deploy.
volumes:
    ors_graphs:
    ors_elevation:
    ors_config:
    ors_logs:
